pipeline {
    agent any
    environment {
        PATH = "${env.PATH}:/usr/local/bin"
        // define environment variables for Azure credentials
        TF_VAR_admin_password = credentials('admin_password')
        ARM_CLIENT_ID       = credentials('ARM_CLIENT_ID')
        ARM_CLIENT_SECRET   = credentials('ARM_CLIENT_SECRET')
        ARM_TENANT_ID       = credentials('ARM_TENANT_ID')
        ARM_SUBSCRIPTION_ID = credentials('ARM_SUBSCRIPTION_ID')
    }
    stages {
        stage('Initialize') {
            steps {
                script {
                    sh 'echo "Initializing Terraform"'
                    sh 'terraform init'
                }
            }
        }
        stage('Plan') {
            steps {
                script {
                    sh 'echo "Generating Terraform plan"'
                    sh 'terraform plan -out=tfplan'
                }
            }
        }
        stage('Approval') {
            steps {
                input(message: "Review the plan and approve if it's okay to proceed", ok: "Deploy")
            }
        }
        stage('Apply') {
            steps {
                script {
                    sh 'echo "Applying Terraform plan"'
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }
        stage('Terraform Output Validation') {
            steps {
                script {
                    echo "Validating Terraform outputs"
                    def vmIdExists = sh(script: 'terraform output -json | jq -e .vmIds', returnStatus: true) == 0

                    if (vmIdExists) {
                        def vmIds = sh(script: 'terraform output -json vmIds', returnStdout: true).trim()
                        if (vmIds) {
                            echo "VM IDs: $vmIds"
                        } else {
                            error("VM ID output is missing or invalid")
                        } 
                    } else {
                        echo "VM ID output not found, skipping validation as the resources might have been destroyed."
                    }
                }
            }
        }
    }
}
